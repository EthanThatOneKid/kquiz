#!/usr/bin/env bash
set -e

schemaFile=types/qg.json
package=qg

exceptions=(
	JeopardyGameData
)

generate() {
	echo "// Code generated by jtd-go-validators. DO NOT EDIT."
	echo
	echo "package $package"
	echo

	IFS=$'\n' defns=( $(filterDefns ".value.properties or .value.discriminator") )
	for defn in "${defns[@]}"; do
		if except "$defn"; then
			continue
		fi
		generateDefn "$defn"
	done
}

filterDefns() {
	jq -r "
		.definitions
			| to_entries
			| .[]
			| select($1)
			| .key
		" < $schemaFile
}

generateDefn() {
	local defn="$1"
	echo "// Validate validates the $defn object. It implements the"
	echo "// Validator interface."
	echo "func (v *$defn) Validate() error {"
	echo "	return Validate(\"$defn\", v)"
	echo "}"
	echo
}

except() {
	for e in "${exceptions[@]}"; do
		if [[ "$e" == "$1" ]]; then
			return 0
		fi
	done
	return 1
}

main() {
	output="$1"
	if [[ "$output" == "" ]]; then
		echo "Usage: $0 <output>" >&2
		return 1
	fi

	generate > "$output"
	goimports -w "$output"
}

main "$@"
